// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String 
  password String
  image String? 
  phone String?
  gender gender ?
  address String?
  role Role ? @default(USER)

  cartItem CartItem[]
}

enum gender {
  MALE
  FEMALE
}
enum Role {
  USER
  ADMIN
}

model Category{
  id Int @id @default(autoincrement())
  name String

  product Product[]
}

model Product{
  id Int @id @default(autoincrement())
  image String?
  product_name String
  product_desc String?
  price String?
  stok String?

  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartItem CartItem[]
}

model CartItem {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cart_items")
}
